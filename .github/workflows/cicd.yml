name: REACT CI/CD with Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # CI
      - name: Set up SSH for GitHub
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Check out code
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t kjeok/jebbangco_frontend:latest .

      - name: Push Docker image to Docker Hub
        run: docker push kjeok/jebbangco_frontend:latest

      # CD
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: 22
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # 기존 컨테이너 확인 및 안전한 종료
            if docker ps -q --filter "name=jebbangco_frontend"; then
              docker stop jebbangco_frontend
              docker rm jebbangco_frontend
            fi

            # 사용 중인 포트 강제 해제 (3000번 포트)
            if lsof -i :3000 | grep LISTEN; then
              fuser -k 3000/tcp
            fi

            # 최신 이미지 가져오기
            docker pull kjeok/jebbangco_frontend:latest

            # 네트워크 보장 (네트워크가 없으면 생성)
            if ! docker network ls | grep jebbangco_network; then
              docker network create jebbangco_network
            fi

            # 새 컨테이너 실행
            docker run -d --name jebbangco_frontend \
              --network jebbangco_network \
              -p 3000:3000 \
              kjeok/jebbangco_frontend:latest

            # 컨테이너 상태 확인
            docker ps --filter "name=jebbangco_frontend"

            # 컨테이너 로그 출력 (디버깅용)
            docker logs jebbangco_frontend
